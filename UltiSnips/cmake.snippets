snippet appqtgui "QtGuiApplication"
cmake_minimum_required(VERSION 3.2)
project(${1:projectName})


set(CMAKE_CXX_STANDARD 17)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)
set(CMAKE_AUTOUIC ON)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

set(CMAKE_AUTOUIC_SEARCH_PATHS ${PROJECT_SOURCE_DIR}/ui)

find_package(Qt5 COMPONENTS
    Core
    Gui
    Widgets
    REQUIRED)

# 头文件
include_directories(
	${PROJECT_SOURCE_DIR}/include
    )

# 源文件
aux_source_directory(
	${PROJECT_SOURCE_DIR}/src SRC_DIR
    )


add_executable(${1} \$\{SRC_DIR\})

# add_library(${1} SHARED \$\{SRC_DIR\})

target_link_libraries(${1}
    Qt5::Core
    Qt5::Gui
    Qt5::Widgets
    )
endsnippet

snippet wincc "global mingw compiler"
if(UNIX)
    message(STATUS "-------------------------Config Unix-------------------------")
    set(CMAKE_SYSTEM_NAME Windows)
	set(CMAKE_SYSTEM_VERSION 1)
    set(CMAKE_C_COMPILER /usr/bin/x86_64-w64-mingw32-gcc)
    set(CMAKE_CXX_COMPILER /usr/bin/x86_64-w64-mingw32-g++)
    set(CMAKE_RC_COMPILER /usr/bin/x86_64-w64-mingw32-windres)
    set(CMAKE_FIND_ROOT_PATH /usr/x86_64-w64-mingw32)
    set(CMAKE_PREFIX_PATH /usr/x86_64-w64-mingw32/lib/cmake)
elseif(WIN32)
	message(STATUS "-------------------------Config Win32-------------------------")
    set(CMAKE_PREFIX_PATH D:/QTLibrary/Qt5.15.2-Windows-x86_64-MSVC2019-staticFull/lib/cmake)
    if(MSVC)
        set(CMAKE_CXX_FLAGS "/utf-8 /EHa")
        set(CMAKE_MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
    endif(MSVC)
endif(UNIX)
${0}
endsnippet


